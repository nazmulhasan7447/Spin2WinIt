# Generated by Django 3.2.11 on 2022-07-12 15:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('adminPanel', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('shipping_cost', models.FloatField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, choices=[('curnt', 'Current Order'), ('prev', 'Previous Order')], max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_total_amount', models.FloatField(blank=True, null=True)),
                ('total_shipping_cost', models.FloatField(blank=True, default=0, null=True)),
                ('total_amount', models.FloatField(blank=True, default=0, null=True)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('order_status', models.CharField(blank=True, choices=[('a', 'Approved'), ('p', 'Pending'), ('c', 'Cancelled')], max_length=255, null=True)),
                ('delivery_status', models.BooleanField(blank=True, default=False, null=True)),
                ('delivery_date', models.DateTimeField(blank=True, null=True)),
                ('shipping_status', models.BooleanField(blank=True, default=False, null=True)),
                ('shipping_date', models.DateTimeField(blank=True, null=True)),
                ('order_note', models.TextField(blank=True, null=True)),
                ('payment_status', models.BooleanField(blank=True, default=False, null=True)),
                ('payment_options', models.CharField(blank=True, choices=[('cod', 'Cash on Delivery')], max_length=35, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('billing_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.billinginfo')),
                ('items', models.ManyToManyField(blank=True, to='product.OrderedItem')),
                ('shipping_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.shippinginfo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(blank=True, max_length=255, null=True)),
                ('product_type', models.CharField(blank=True, max_length=5, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='productImg')),
                ('img_link', models.CharField(blank=True, max_length=500, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='ProductList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(blank=True, choices=[('wsp', 'Woocommerce store product'), ('mcp', 'Custom Product')], max_length=255, null=True)),
                ('product_id', models.CharField(blank=True, default='id', max_length=255, null=True)),
                ('slug', models.TextField(blank=True, default='slug', null=True)),
                ('cat_id', models.CharField(blank=True, default='id', max_length=255, null=True)),
                ('cat_name', models.CharField(blank=True, default='cat_name', max_length=255, null=True)),
                ('subcat_id', models.CharField(blank=True, default='id', max_length=255, null=True)),
                ('subcat_name', models.CharField(blank=True, default='subcat_name', max_length=255, null=True)),
                ('title', models.TextField(blank=True, default='title', null=True)),
                ('brand_name', models.CharField(blank=True, default='brand_name', max_length=255, null=True)),
                ('old_price', models.FloatField(blank=True, default=0, null=True)),
                ('new_price', models.FloatField(blank=True, default=0, null=True)),
                ('short_des', models.TextField(blank=True, default='Description', null=True)),
                ('details', models.TextField(blank=True, default='Details', null=True)),
                ('product_thumbnail', models.ImageField(blank=True, null=True, upload_to='product_thumbnail_img')),
                ('policy_followed', models.CharField(blank=True, default='Not selected', max_length=255, null=True)),
                ('use_case', models.TextField(blank=True, default='Not added', null=True)),
                ('benefits', models.TextField(blank=True, default='Not added', null=True)),
                ('security_policy', models.TextField(blank=True, default='Not added', null=True)),
                ('return_policy', models.TextField(blank=True, default='Not added', null=True)),
                ('delivery_policy', models.TextField(blank=True, default='Not added', null=True)),
                ('refund_policy', models.TextField(blank=True, default='Not added', null=True)),
                ('store_name', models.CharField(blank=True, default='Not added', max_length=255, null=True)),
                ('store_link', models.CharField(blank=True, default='Not added', max_length=255, null=True)),
                ('about_store', models.TextField(blank=True, default='', null=True)),
                ('total_sold', models.IntegerField(blank=True, default=0, null=True)),
                ('in_stock', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('avrg_rating', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('rating_count', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('price', models.CharField(blank=True, max_length=255, null=True)),
                ('regular_price', models.CharField(blank=True, max_length=255, null=True)),
                ('sponsr_as_prize', models.BooleanField(blank=True, default=False, null=True)),
                ('product_weight', models.FloatField(blank=True, default=0, null=True)),
                ('product_length', models.CharField(blank=True, max_length=50, null=True)),
                ('product_width', models.CharField(blank=True, max_length=50, null=True)),
                ('product_height', models.CharField(blank=True, max_length=50, null=True)),
                ('sponsor_status', models.CharField(blank=True, default='No', max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminPanel.productcategory')),
                ('productImg', models.ManyToManyField(blank=True, to='product.ProductImg')),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='ProductWeightCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria_id', models.CharField(blank=True, max_length=255, null=True)),
                ('min_weight', models.FloatField(default=0)),
                ('max_weight', models.FloatField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classID', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('name', models.CharField(default='', max_length=255)),
                ('cost_rate', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='WoocommerceProductList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(default='', max_length=255)),
                ('name', models.TextField()),
                ('slug', models.TextField()),
                ('description', models.TextField()),
                ('price', models.CharField(default='', max_length=255)),
                ('regular_price', models.CharField(blank=True, max_length=255, null=True)),
                ('total_sales', models.CharField(blank=True, max_length=255, null=True)),
                ('cat_id', models.CharField(max_length=255)),
                ('cat_name', models.CharField(max_length=255)),
                ('subcat_id', models.CharField(blank=True, max_length=255, null=True)),
                ('subcat_name', models.CharField(blank=True, max_length=255, null=True)),
                ('stock_status', models.CharField(max_length=255)),
                ('avrg_rating', models.CharField(blank=True, max_length=255, null=True)),
                ('rating_count', models.CharField(blank=True, max_length=255, null=True)),
                ('sponsr_as_prize', models.BooleanField(blank=True, default=False, null=True)),
                ('product_weight', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('product_length', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('product_width', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('product_height', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('product_img', models.ManyToManyField(blank=True, to='product.ProductImg')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.productlist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_val', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, default='Comment', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.productlist')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductPurchasePaymntHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_amount', models.FloatField(blank=True, default=0, null=True)),
                ('payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payee_email', models.CharField(blank=True, max_length=255, null=True)),
                ('payee_marchnt_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payee_address', models.CharField(blank=True, max_length=255, null=True)),
                ('payer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('payer_email', models.CharField(blank=True, max_length=255, null=True)),
                ('payer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payer_post_code', models.CharField(blank=True, max_length=255, null=True)),
                ('payer_country_code', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.orderlist')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='productlist',
            name='shipping_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='product.shippingclass'),
        ),
        migrations.AddField(
            model_name='productlist',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminPanel.productsubcategory'),
        ),
        migrations.AddField(
            model_name='productlist',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ProductDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_amount', models.CharField(default='', max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.productlist')),
            ],
        ),
        migrations.AddField(
            model_name='ordereditem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.productlist'),
        ),
        migrations.AddField(
            model_name='ordereditem',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='OfferedSingleProductBasedOnMembershipRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_amount', models.IntegerField(blank=True, default=0)),
                ('offered_price', models.FloatField(blank=True, default=0.0)),
                ('membership_rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminPanel.membershiprank')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.productlist')),
                ('product_cat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='adminPanel.productcategory')),
            ],
        ),
        migrations.CreateModel(
            name='OfferedProductItemsByMembershipRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_amount', models.IntegerField(blank=True, default=0)),
                ('membership_rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminPanel.membershiprank')),
                ('product', models.ManyToManyField(blank=True, to='product.ProductList')),
                ('product_cat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='adminPanel.productcategory')),
            ],
        ),
        migrations.CreateModel(
            name='HomeMiniTopBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_id', models.CharField(blank=True, max_length=255, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='banner')),
                ('url', models.CharField(blank=True, max_length=350, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HomeMiniBottomBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_id', models.CharField(blank=True, max_length=255, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='banner')),
                ('url', models.CharField(blank=True, max_length=350, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CouponCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_code', models.CharField(max_length=30)),
                ('discount_amnt', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('coupon_banner', models.ImageField(blank=True, null=True, upload_to='coupon_banner')),
                ('terms_conditions', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.productlist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BannerList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_id', models.CharField(blank=True, max_length=255, null=True)),
                ('offer_title', models.CharField(blank=True, max_length=255, null=True)),
                ('offer_amount_or_title', models.CharField(blank=True, max_length=255, null=True)),
                ('offer_duration', models.CharField(blank=True, max_length=255, null=True)),
                ('product_title', models.CharField(blank=True, max_length=255, null=True)),
                ('starting_price', models.CharField(blank=True, max_length=255, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='banner')),
                ('product_url', models.CharField(blank=True, max_length=350, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AppliedCouponHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_got', models.CharField(blank=True, max_length=24, null=True)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.couponcode')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.orderlist')),
            ],
        ),
        migrations.CreateModel(
            name='AllProductList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(blank=True, choices=[('wsp', 'Woocommerce store product'), ('mcp', 'Custom Product')], max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('custom_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='product.productlist')),
                ('woocmrce_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='product.woocommerceproductlist')),
            ],
        ),
    ]
